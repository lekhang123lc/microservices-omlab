version: '3.6'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zookeeper:2888:3888
    networks:
      - infra-net

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9999:9999"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zookeeper
    networks:
      - infra-net

  postgres:
    image: postgres:9.6
    container_name: postgres
    environment:
      POSTGRES_USER: omlab
      POSTGRES_PASSWORD: password
      POSTGRES_MULTIPLE_DATABASES: user_db,activity_db
      PGDATA: /data/postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U omlab" ]
      interval: 30s
      timeout: 30s
      retries: 3
    volumes:
      - postgres:/data/postgres
      - ./scripts/postgres:/docker-entrypoint-initdb.d
    networks:
      - postgres-net
    restart: unless-stopped

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - spring-net
      - infra-net

  apigw:
    image: apigw
    build:
      context: ./apigw
    container_name: apigw
    ports:
      - "9000:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - postgres-net
      - spring-net
      - infra-net
    depends_on:
      - zipkin
      - postgres
      - kafka

  user-service:
    image: user-service
    build:
      context: ./user-service
    container_name: user-service
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - postgres-net
      - spring-net
      - infra-net
    depends_on:
      - zipkin
      - postgres
      - kafka

  activity-history-service:
    image: activity-history-service
    build:
      context: ./activity-history-service
    container_name: activity-history-service
    ports:
      - "8081:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - postgres-net
      - spring-net
      - infra-net
    depends_on:
      - zipkin
      - postgres
      - kafka


networks:
  postgres-net:
    name: postgres-net
    driver: bridge
  spring-net:
    name: spring-net
    driver: bridge
  infra-net:
    name: infra-net
    driver: bridge


volumes:
  postgres: